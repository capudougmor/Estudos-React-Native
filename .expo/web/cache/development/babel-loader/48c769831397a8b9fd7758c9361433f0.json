{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/workspace/Estudos-react-native/src/pages/Listas/index.jsx\",\n    _templateObject;\n\nimport React, { useState, useEffect } from 'react';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport styled from 'styled-components/native';\nimport uuid from 'uuid/v4';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport lista from \"./assets/listaScrol\";\nimport ListItem from \"./components/ListaItem\";\nimport ListaItemSwipe from \"./components/ListaItemSwipe\";\nimport AddItemArea2 from \"./components/AddItemArea2\";\nexport default function Lista() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var addNewItem = function addNewItem(txt) {\n    var newItems;\n    return _regeneratorRuntime.async(function addNewItem$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            newItems = _toConsumableArray(items);\n            newItems.push({\n              id: uuid(),\n              task: txt,\n              done: false\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@items', newItems));\n\n          case 4:\n            setItems(newItems);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var toggleDone = function toggleDone(index) {\n    var newItems = _toConsumableArray(items);\n\n    newItems[index].done = !newItems[index].done;\n    setItems(newItems);\n  };\n\n  var deleteItem = function deleteItem(index) {\n    var newItems;\n    return _regeneratorRuntime.async(function deleteItem$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newItems = _toConsumableArray(items);\n            newItems = newItems.filter(function (it, newIndex) {\n              return newIndex != index;\n            });\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@items', newItems));\n\n          case 4:\n            setItems(newItems);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getItems = function getItems() {\n    var itemsSaved;\n    return _regeneratorRuntime.async(function getItems$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@items'));\n\n          case 2:\n            itemsSaved = _context3.sent;\n            setItems(itemsSaved);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getItems();\n  }, []);\n  return React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(AddItemArea2, {\n    onAdd: addNewItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(SwipeListView, {\n    data: items,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(ListItem, {\n        onPress: function onPress() {\n          return toggleDone(index);\n        },\n        data: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 38\n        }\n      });\n    },\n    renderHiddenItem: function renderHiddenItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(ListaItemSwipe, {\n        onDelete: function onDelete() {\n          return deleteItem(index);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 46\n        }\n      });\n    },\n    leftOpenValue: 50,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    disableLeftSwipe: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}\nvar Page = styled.SafeAreaView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n\"])));","map":{"version":3,"sources":["/workspace/Estudos-react-native/src/pages/Listas/index.jsx"],"names":["React","useState","useEffect","SwipeListView","styled","uuid","AsyncStorage","lista","ListItem","ListaItemSwipe","AddItemArea2","Lista","items","setItems","addNewItem","txt","newItems","push","id","task","done","setItem","toggleDone","index","deleteItem","filter","it","newIndex","getItems","getItem","itemsSaved","item","Page","SafeAreaView"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { SwipeListView } from 'react-native-swipe-list-view'\nimport styled from 'styled-components/native'\nimport uuid from 'uuid/v4'\nimport AsyncStorage from '@react-native-community/async-storage'\n\nimport lista from './assets/listaScrol'\nimport ListItem from './components/ListaItem'\nimport ListaItemSwipe from './components/ListaItemSwipe'\nimport AddItemArea2 from './components/AddItemArea2'\n\nexport default function Lista() {\n  const [items, setItems] = useState()\n\n  const addNewItem = async (txt) => {\n    let newItems = [...items]\n    newItems.push({\n      id: uuid(),\n      task: txt,\n      done: false\n    })\n    await AsyncStorage.setItem('@items', newItems)\n    setItems(newItems)\n  }\n\n  const toggleDone = (index) => {\n    let newItems = [...items]\n    newItems[index].done = !newItems[index].done\n    setItems(newItems)\n  }\n\n  const deleteItem = async (index) => {\n    let newItems = [...items]\n    newItems = newItems.filter((it, newIndex) => newIndex!=index)\n\n    await AsyncStorage.setItem('@items', newItems)\n    setItems(newItems)\n  }\n\n  const getItems = async () => {\n    const itemsSaved = await AsyncStorage.getItem('@items')\n    setItems(itemsSaved)\n  }\n\n  useEffect(() => {\n    getItems()\n  }, [])\n\n  return (\n    <Page>\n      <AddItemArea2 onAdd={addNewItem} />\n      <SwipeListView \n        data={items}\n        renderItem={({item, index})=><ListItem onPress={() => toggleDone(index)} data={item}/>}\n        renderHiddenItem={({item, index}) => <ListaItemSwipe onDelete={() => deleteItem(index)} />}\n        leftOpenValue={50}\n        keyExtractor={(item) => item.id}\n        disableLeftSwipe={true}\n        // rightOpenValue={-50}\n      />\n    </Page>\n  )\n}\n\nconst Page = styled.SafeAreaView`\n  flex: 1;\n`\n"]},"metadata":{},"sourceType":"module"}