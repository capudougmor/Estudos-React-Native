{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/workspace/Estudos-react-native/src/pages/Gerador/Index.jsx\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6;\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/native';\nimport Slider from '@react-native-community/slider';\nimport Clipboard from 'expo-clipboard';\nimport Button2 from \"./Button.js\";\nimport { useNavigation } from '@react-navigation/native';\nvar charset = 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789';\nexport default function Gerador() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(5),\n      _useState4 = _slicedToArray(_useState3, 2),\n      size = _useState4[0],\n      setSize = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      colorButon = _useState6[0],\n      setColorButon = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      color = _useState8[0],\n      setColor = _useState8[1];\n\n  var navigation = useNavigation();\n\n  function generatePass() {\n    var pass = '';\n\n    for (var i = 0, n = charset.length; i < size; i++) {\n      pass += charset.charAt(Math.floor(Math.random() * n));\n    }\n\n    setPassword(pass);\n  }\n\n  function copyPass() {\n    Clipboard.setString(password);\n    alert('Senha copiada com sucesso!');\n  }\n\n  function handleGoUseState() {\n    navigation.navigate('UseState', {\n      password: password\n    });\n  }\n\n  function handleUseRed() {\n    setColor('#ff2600');\n    navigation.navigate('UseState', {\n      password: password,\n      color: color\n    });\n  }\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    source: require(\"./images/logo.png\"),\n    resizeMode: \"cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, Math.floor(size), \" Caracteres\", color, \" \"), React.createElement(TextArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Slider, {\n    minimumValue: 5,\n    maximumValue: 15,\n    minimumTrackTintColor: \"#ff0000\",\n    maximumTrackTintColor: \"#000\",\n    value: size,\n    onValueChange: function onValueChange(valor) {\n      return setSize(valor.toFixed(0));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), React.createElement(Button2, {\n    onPress: generatePass,\n    colorButon: \"#00eeff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Gerar senha\")), password && React.createElement(TextArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Password, {\n    onLongPress: copyPass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, password)), React.createElement(Button2, {\n    onPress: handleUseRed,\n    colorButon: \"#ff2600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Escolher esta cor\")), React.createElement(Button2, {\n    onPress: function onPress() {\n      return setColor('#ffa200');\n    },\n    colorButon: \"#ffa200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Escolher esta cor\")), React.createElement(Button2, {\n    onPress: function onPress() {\n      return setColor('#51ff00');\n    },\n    colorButon: \"#51ff00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Escolher esta cor\")));\n}\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  background-color: #f3f3ff;\\n  flex: 1;\\n  align-items: center;\\n  justify-content: center;\\n\"])));\nvar Logo = styled.Image(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 50px;\\n\"])));\nvar Title = styled.Text(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  font-size: 35px;\\n  font-weight: bold;\\n\"])));\nvar TextArea = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  width: 90%;\\n  margin: 15px 0;\\n  padding: 15px 0;\\n  background-color: #fff;\\n  border-radius: 8px;\\n\"])));\nvar ButtonText = styled(Title)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  font-size: 20px;\\n  color: #fff;\\n\"])));\nvar Password = styled(ButtonText)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  color: #000;\\n  align-self: center;\\n\"])));","map":{"version":3,"sources":["/workspace/Estudos-react-native/src/pages/Gerador/Index.jsx"],"names":["React","useState","useEffect","styled","Slider","Clipboard","Button2","useNavigation","charset","Gerador","password","setPassword","size","setSize","colorButon","setColorButon","color","setColor","navigation","generatePass","pass","i","n","length","charAt","Math","floor","random","copyPass","setString","alert","handleGoUseState","navigate","handleUseRed","require","valor","toFixed","Container","View","Logo","Image","Title","Text","TextArea","ButtonText","Password"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components/native'\n\nimport Slider from '@react-native-community/slider'\nimport Clipboard from 'expo-clipboard'\nimport Button2 from \"./Button.js\";\n\nimport { useNavigation } from '@react-navigation/native'\n\nlet charset = 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789'\n\nexport default function Gerador() {\n\n  const [password, setPassword] = useState()\n  const [size, setSize] = useState(5)\n  const [colorButon, setColorButon] = useState()\n  const [color, setColor] = useState()\n  const navigation = useNavigation()\n\n  function generatePass() {\n    let pass = ''\n    for (let i = 0, n = charset.length; i < size; i++) {\n      pass += charset.charAt(Math.floor(Math.random() * n))\n    }\n    setPassword(pass)\n  }\n  \n  function copyPass() {\n    Clipboard.setString(password)\n    alert('Senha copiada com sucesso!')\n  }\n\n  function handleGoUseState() {\n    navigation.navigate('UseState', {password})\n  }\n\n  function handleUseRed() {\n    setColor('#ff2600')\n    navigation.navigate('UseState', {password, color})\n  }\n\n  return (\n    <Container>\n      <Logo\n        source={require('./images/logo.png')}\n        resizeMode=\"cover\"\n      />\n      <Title>{Math.floor(size)} Caracteres{color} </Title>\n      <TextArea>\n        <Slider\n          minimumValue={5}\n          maximumValue={15}\n          minimumTrackTintColor=\"#ff0000\"\n          maximumTrackTintColor=\"#000\"\n          value={size}\n          onValueChange={(valor) => setSize(valor.toFixed(0))}\n        />\n      </TextArea>\n      <Button2 onPress={generatePass} colorButon='#00eeff'>\n        <ButtonText>Gerar senha</ButtonText>\n      </Button2>\n      {password && (\n        <TextArea >\n          <Password onLongPress={copyPass} >{password}</Password>\n        </TextArea>\n      )}\n\n      <Button2 onPress={handleUseRed} colorButon='#ff2600'>\n        <ButtonText>Escolher esta cor</ButtonText>\n      </Button2>\n      <Button2 onPress={() => setColor('#ffa200')} colorButon='#ffa200'>\n        <ButtonText>Escolher esta cor</ButtonText>\n      </Button2>\n      <Button2 onPress={() => setColor('#51ff00')} colorButon='#51ff00'>\n        <ButtonText>Escolher esta cor</ButtonText>\n      </Button2>\n    </Container>\n  )\n}\n\nconst Container = styled.View`\n  background-color: #f3f3ff;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Logo = styled.Image`\n  margin-bottom: 50px;\n`\n\nconst Title = styled.Text`\n  font-size: 35px;\n  font-weight: bold;\n`\n\nconst TextArea = styled.View`\n  width: 90%;\n  margin: 15px 0;\n  padding: 15px 0;\n  background-color: #fff;\n  border-radius: 8px;\n`\n\nconst ButtonText = styled(Title)`\n  font-size: 20px;\n  color: #fff;\n`\n\nconst Password = styled(ButtonText)`\n  color: #000;\n  align-self: center;\n`\n"]},"metadata":{},"sourceType":"module"}