{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/workspace/Estudos-react-native/src/pages/Listas/index.jsx\";\nimport React, { useState } from 'react';\nimport { Page, Item, ItemText, Scroll, ItemCheck, Listagem } from \"./styles\";\nimport lista from \"../../assets/listaScrol\";\nimport ListItem from \"./components/ListaItem\";\nimport AddItemArea from \"./components/AddItemArea\";\nimport AddItemArea2 from \"./components/AddItemArea2\";\nexport default function Lista() {\n  var _this = this;\n\n  var _useState = useState(lista),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var addNewItem = function addNewItem(txt) {\n    var newItems = _toConsumableArray(items);\n\n    newItems.push({\n      task: txt,\n      done: false\n    });\n    setItems(newItems);\n  };\n\n  var onPress = function onPress() {};\n\n  return React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(AddItemArea2, {\n    onAdd: addNewItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(Listagem, {\n    data: items,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        onPress: toggleDone,\n        data: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 31\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.nome;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/workspace/Estudos-react-native/src/pages/Listas/index.jsx"],"names":["React","useState","Page","Item","ItemText","Scroll","ItemCheck","Listagem","lista","ListItem","AddItemArea","AddItemArea2","Lista","items","setItems","addNewItem","txt","newItems","push","task","done","onPress","item","toggleDone","nome"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,EAA+BC,MAA/B,EAAuCC,SAAvC,EAAkDC,QAAlD;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACJX,QAAQ,CAACO,KAAD,CADJ;AAAA;AAAA,MACvBK,KADuB;AAAA,MAChBC,QADgB;;AAG9B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;AAC1B,QAAIC,QAAQ,sBAAOJ,KAAP,CAAZ;;AACAI,IAAAA,QAAQ,CAACC,IAAT,CAAc;AACZC,MAAAA,IAAI,EAAEH,GADM;AAEZI,MAAAA,IAAI,EAAE;AAFM,KAAd;AAIAN,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GAPD;;AASA,MAAMI,OAAO,GAAG,SAAVA,OAAU,GAAM,CAErB,CAFD;;AAIA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEN,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,KADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAES,IAAF,QAAEA,IAAF;AAAA,aAAU,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAEC,UAAnB;AAA+B,QAAA,IAAI,EAAED,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AAAA,KAFd;AAGE,IAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,aAAIA,IAAI,CAACE,IAAT;AAAA,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAqBD","sourcesContent":["import React, {useState} from 'react'\n\nimport { Page, Item, ItemText, Scroll, ItemCheck, Listagem } from './styles'\nimport lista from '../../assets/listaScrol'\nimport ListItem from './components/ListaItem'\nimport AddItemArea from './components/AddItemArea'\nimport AddItemArea2 from './components/AddItemArea2'\n\nexport default function Lista() {\n  const [items, setItems] = useState(lista)\n\n  const addNewItem = (txt) => {\n    let newItems = [...items]\n    newItems.push({\n      task: txt,\n      done: false\n    })\n    setItems(newItems)\n  }\n\n  const onPress = () => {\n\n  }\n\n  return (\n    <Page>\n      {/* <Scroll>\n        {lista.map((item, index) => {\n          return (\n            <Item key={index} activeOpacity={0.4} underlayColor=\"transparent\">\n              <ItemText>{item.task} </ItemText>\n              <ItemCheck></ItemCheck>\n            </Item>\n          )\n        })}\n      </Scroll> */}\n      {/* <AddItemArea items={items} setItems={setItems} /> */}\n      <AddItemArea2 onAdd={addNewItem} />\n      <Listagem \n        data={items}\n        renderItem={({item})=><ListItem onPress={toggleDone} data={item}/>}\n        keyExtractor={item => item.nome}\n      />\n    </Page>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}