{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Projetos Node\\\\ReactNative\\\\CursoBonieky\\\\Basic\\\\src\\\\pages\\\\Adivinhe\\\\contexts\\\\NumberHandContext.js\";\nimport { createContext } from \"react\";\nexport var NumberHandContext = createContext();\nexport function NumberHandProvider() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      number1 = _useState2[0],\n      setNumber1 = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      number2 = _useState4[0],\n      setNumber2 = _useState4[1];\n\n  var handleStartGame = function handleStartGame() {\n    if (number1 == number2) {\n      alert('Você acertou o numero!');\n      reset();\n      setNumber1(Math.floor(Math.random() * 5));\n    } else {\n      alert('Você errou!');\n    }\n  };\n\n  var reset = function reset() {\n    setNumber2(0);\n  };\n\n  useEffect(function () {\n    setNumber1(Math.floor(Math.random() * 5));\n  }, []);\n  return React.createElement(NumberHandContext.Provider, {\n    value: {\n      number1: number1,\n      number2: number2,\n      handleStartGame: handleStartGame,\n      reset: reset\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["E:/Projetos Node/ReactNative/CursoBonieky/Basic/src/pages/Adivinhe/contexts/NumberHandContext.js"],"names":["createContext","NumberHandContext","NumberHandProvider","useState","number1","setNumber1","number2","setNumber2","handleStartGame","alert","reset","Math","floor","random","useEffect","children"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,OAA9B;AAEA,OAAO,IAAMC,iBAAiB,GAAGD,aAAa,EAAvC;AAEP,OAAO,SAASE,kBAAT,GAA8B;AAAA,kBAELC,QAAQ,EAFH;AAAA;AAAA,MAE5BC,OAF4B;AAAA,MAEnBC,UAFmB;;AAAA,mBAGLF,QAAQ,CAAC,CAAD,CAHH;AAAA;AAAA,MAG5BG,OAH4B;AAAA,MAGnBC,UAHmB;;AAKnC,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIJ,OAAO,IAAIE,OAAf,EAAwB;AACtBG,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACAC,MAAAA,KAAK;AACLL,MAAAA,UAAU,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAV;AACD,KAJD,MAIO;AACLJ,MAAAA,KAAK,CAAC,aAAD,CAAL;AACD;AACF,GARD;;AAUA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBH,IAAAA,UAAU,CAAC,CAAD,CAAV;AACD,GAFD;;AAIAO,EAAAA,SAAS,CAAC,YAAM;AACdT,IAAAA,UAAU,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAKA,SACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,OAAO,EAAPA,OADK;AAELE,MAAAA,OAAO,EAAPA,OAFK;AAGLE,MAAAA,eAAe,EAAfA,eAHK;AAILE,MAAAA,KAAK,EAALA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGK,QARH,CADF;AAYD","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const NumberHandContext = createContext()\r\n\r\nexport function NumberHandProvider() {\r\n\r\n  const [number1, setNumber1] = useState()\r\n  const [number2, setNumber2] = useState(0)\r\n\r\n  const handleStartGame = () => {\r\n    if (number1 == number2) {\r\n      alert('Você acertou o numero!')\r\n      reset()\r\n      setNumber1(Math.floor(Math.random() * 5))\r\n    } else {\r\n      alert('Você errou!')\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    setNumber2(0)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNumber1(Math.floor(Math.random() * 5))\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <NumberHandContext.Provider\r\n      value={{\r\n        number1,\r\n        number2,\r\n        handleStartGame,\r\n        reset\r\n      }}\r\n    >\r\n      {children}\r\n    </NumberHandContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}