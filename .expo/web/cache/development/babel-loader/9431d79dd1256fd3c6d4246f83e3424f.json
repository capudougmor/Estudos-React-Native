{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/workspace/Estudos-react-native/src/pages/Adivinhe/contexts/NumberHandContext.js\";\nimport React, { createContext, useEffect, useState } from \"react\";\nexport var NumberHandContext = createContext();\nexport function NumberHandProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      number1 = _useState2[0],\n      setNumber1 = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      number2 = _useState4[0],\n      setNumber2 = _useState4[1];\n\n  var handleStartGame = function handleStartGame() {\n    if (number1 == number2) {\n      alert('Você acertou o numero!');\n      reset();\n      setNumber1(Math.floor(Math.random() * 5));\n    } else {\n      alert('Você errou!');\n    }\n  };\n\n  var reset = function reset() {\n    setNumber2(0);\n  };\n\n  useEffect(function () {\n    setNumber1(Math.floor(Math.random() * 5));\n  }, []);\n  return React.createElement(NumberHandContext.Provider, {\n    value: {\n      number1: number1,\n      number2: number2,\n      setNumber1: setNumber1,\n      setNumber2: setNumber2,\n      handleStartGame: handleStartGame,\n      reset: reset\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["/workspace/Estudos-react-native/src/pages/Adivinhe/contexts/NumberHandContext.js"],"names":["React","createContext","useEffect","useState","NumberHandContext","NumberHandProvider","children","number1","setNumber1","number2","setNumber2","handleStartGame","alert","reset","Math","floor","random"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,OAAO,IAAMC,iBAAiB,GAAGH,aAAa,EAAvC;AAEP,OAAO,SAASI,kBAAT,OAAwC;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AAAA,kBAEfH,QAAQ,CAAC,CAAD,CAFO;AAAA;AAAA,MAEtCI,OAFsC;AAAA,MAE7BC,UAF6B;;AAAA,mBAGfL,QAAQ,CAAC,CAAD,CAHO;AAAA;AAAA,MAGtCM,OAHsC;AAAA,MAG7BC,UAH6B;;AAK7C,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIJ,OAAO,IAAIE,OAAf,EAAwB;AACtBG,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACAC,MAAAA,KAAK;AACLL,MAAAA,UAAU,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAV;AACD,KAJD,MAIO;AACLJ,MAAAA,KAAK,CAAC,aAAD,CAAL;AACD;AACF,GARD;;AAUA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBH,IAAAA,UAAU,CAAC,CAAD,CAAV;AACD,GAFD;;AAIAR,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,UAAU,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAKA,SACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,OAAO,EAAPA,OADK;AAELE,MAAAA,OAAO,EAAPA,OAFK;AAGLD,MAAAA,UAAU,EAAVA,UAHK;AAILE,MAAAA,UAAU,EAAVA,UAJK;AAKLC,MAAAA,eAAe,EAAfA,eALK;AAMLE,MAAAA,KAAK,EAALA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGP,QAVH,CADF;AAcD","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\n\nexport const NumberHandContext = createContext()\n\nexport function NumberHandProvider({children}) {\n\n  const [number1, setNumber1] = useState(0)\n  const [number2, setNumber2] = useState(0)\n\n  const handleStartGame = () => {\n    if (number1 == number2) {\n      alert('Você acertou o numero!')\n      reset()\n      setNumber1(Math.floor(Math.random() * 5))\n    } else {\n      alert('Você errou!')\n    }\n  }\n\n  const reset = () => {\n    setNumber2(0)\n  }\n\n  useEffect(() => {\n    setNumber1(Math.floor(Math.random() * 5))\n  }, [])\n\n\n  return (\n    <NumberHandContext.Provider\n      value={{\n        number1,\n        number2,\n        setNumber1,\n        setNumber2,\n        handleStartGame,\n        reset\n      }}\n    >\n      {children}\n    </NumberHandContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}